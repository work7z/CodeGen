<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.denote</groupId>
    <artifactId>client</artifactId>
    <version>1.0</version>
    <packaging>jar</packaging>

    <properties>
        <roo.version>3.0.8-01</roo.version>
        <java.version>1.8</java.version>
    </properties>

    <!-- Inherit defaults from Spring Boot -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>1.5.13.RELEASE</version>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.h2database</groupId>
            <artifactId>h2</artifactId>
            <version>2.1.210</version>
        </dependency>

        <dependency>
  <groupId>com.gitee.sunchenbin.mybatis.actable</groupId>
  <artifactId>mybatis-enhance-actable</artifactId>
  <version>1.4.1.RELEASE</version>
</dependency>

        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
        <!--</dependency>-->

        <dependency>
            <groupId>com.belerweb</groupId>
            <artifactId>pinyin4j</artifactId>
            <version>2.5.0</version>
        </dependency>

        <dependency>
<groupId>org.jsoup</groupId>
<artifactId>jsoup</artifactId>
<version>1.7.3</version>
</dependency>


        <!-- redis starter -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.boot</groupId>-->
            <!--<artifactId>spring-boot-starter-data-redis</artifactId>-->
        <!--</dependency>-->


        <!-- spring session的依赖 -->
        <!--<dependency>-->
            <!--<groupId>org.springframework.session</groupId>-->
            <!--<artifactId>spring-session-data-redis</artifactId>-->
        <!--</dependency>-->


        <!--Spring Boot依赖-->
        <!-- https://mvnrepository.com/artifact/org.apache.httpcomponents/httpclient -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.6</version>
        </dependency>


        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.3.2</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>2.4</version>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <version>1.5.13.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jdbc</artifactId>
            <version>1.5.13.RELEASE</version>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
            <version>1.5.13.RELEASE</version>
        </dependency>
        <!--常用库依赖-->
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>3.6</version>
        </dependency>
        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>23.0</version>
        </dependency>
        <!--MySQL JDBC驱动-->
<!--        <dependency>-->
<!--            <groupId>mysql</groupId>-->
<!--            <artifactId>mysql-connector-java</artifactId>-->
<!--            <version>5.1.46</version>-->
<!--            <scope>runtime</scope>-->
<!--        </dependency>-->
        <!--MyBatis 及 插件依赖-->
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis-spring</artifactId>
            <version>1.3.1</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/commons-beanutils/commons-beanutils -->
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.3</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>com.ejlchina</groupId>-->
<!--            <artifactId>okhttps</artifactId>-->
<!--            <version>3.4.2</version>-->
<!--        </dependency>-->
<!--        <dependency>-->
<!--            <groupId>com.ejlchina</groupId>-->
<!--            <artifactId>okhttps-fastjson</artifactId>-->
<!--            <version>3.4.2</version>-->
<!--        </dependency>-->

        <dependency>
            <groupId>net.glxn.qrgen</groupId>
            <artifactId>javase</artifactId>
            <version>2.0</version>
        </dependency>
        <dependency>
            <groupId>org.mybatis</groupId>
            <artifactId>mybatis</artifactId>
            <version>3.4.5</version>
        </dependency>
        <!--阿里 FastJson依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
            <version>1.2.79</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>com.zaxxer</groupId>-->
<!--            <artifactId>HikariCP</artifactId>-->
<!--            <version>4.0.3</version>-->
<!--        </dependency>-->

        <!--阿里 Druid Spring Boot Starter依赖-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid-spring-boot-starter</artifactId>
            <version>1.1.10</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>1.18.10</version>
        </dependency>

<!--        <dependency>-->
<!--            <groupId>org.codehaus.groovy</groupId>-->
<!--            <artifactId>groovy-all</artifactId>-->
<!--            <version>3.0.8</version>-->
<!--            &lt;!&ndash;<scope>provided</scope>&ndash;&gt;-->
<!--            <exclusions>-->
<!--                <exclusion>-->
<!--                    <groupId>javax.servlet</groupId>-->
<!--                    <artifactId>servlet-api</artifactId>-->
<!--                </exclusion>-->
<!--            </exclusions>-->
<!--        </dependency>-->

        <dependency>
            <groupId>org.codehaus.groovy</groupId>
            <artifactId>groovy-eclipse-compiler</artifactId>
            <version>2.7.0-01</version>
        </dependency>

        <dependency>
            <groupId>org.mybatis.generator</groupId>
            <artifactId>mybatis-generator-core</artifactId>
            <version>1.3.5</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
<!--            <plugin>-->
<!--                <groupId>org.springframework.boot</groupId>-->
<!--                <artifactId>spring-boot-maven-plugin</artifactId>-->
<!--            </plugin>-->

            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <encoding>UTF-8</encoding>
                    <compilerId>groovy-eclipse-compiler</compilerId>
                    <!-- set verbose to be true if you want lots of uninteresting messages -->
                    <verbose>true</verbose>
                    <compilerArguments>
                        <!-- consult Lombok docs to confirm agent class name for your version -->
                        <javaAgentClass>lombok.launch.Agent</javaAgentClass>
                    </compilerArguments>
                    <fork>true</fork>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-eclipse-compiler</artifactId>
                        <version>2.7.0-01</version>
                    </dependency>
                    <dependency>
                        <groupId>org.projectlombok</groupId>
                        <artifactId>lombok</artifactId>
                        <version>1.18.10</version>
                    </dependency>
                </dependencies>
            </plugin>




            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <archive>
                        <manifest>
                            <mainClass>com.denote.client.LightingBoot</mainClass>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>


<!--            <plugin>-->
<!--                <groupId>com.jolira</groupId>-->
<!--                <artifactId>onejar-maven-plugin</artifactId>-->
<!--                <version>1.4.4</version>-->
<!--                <executions>-->
<!--                    <execution>-->
<!--                        <configuration>-->
<!--                            <attachToBuild>true</attachToBuild>-->
<!--                            <classifier>onejar</classifier>-->
<!--                            <filename>application.jar</filename>-->
<!--                        </configuration>-->
<!--                        <goals>-->
<!--                            <goal>one-jar</goal>-->
<!--                        </goals>-->
<!--                    </execution>-->
<!--                </executions>-->
<!--            </plugin>-->

            <!-- ProGuard混淆插件-->
            <plugin>
                <groupId>com.github.wvengen</groupId>
                <artifactId>proguard-maven-plugin</artifactId>
                <version>2.2.0</version>
                <executions>
                    <execution>
                        <!-- 混淆时刻，这里是打包的时候混淆-->
                        <phase>package</phase>
                        <goals>
                            <!-- 使用插件的什么功能，当然是混淆-->
                            <goal>proguard</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <!-- 是否将生成的PG文件安装部署-->
                    <attach>true</attach>

                    <!-- 是否混淆-->
                    <obfuscate>true</obfuscate>

                    <!-- 指定生成文件分类 -->
                    <attachArtifactClassifier>pg</attachArtifactClassifier>
                    <options>
                        <!-- JDK目标版本1.8-->
                        <option>-target 1.8</option>

                        <!-- 不做收缩（删除注释、未被引用代码）-->
                        <option>-dontshrink</option>

                        <!-- 不做优化（变更代码实现逻辑）-->
                        <option>-dontoptimize</option>

                        <option>-classobfuscationdictionary ./mytest.txt</option>
                        <option>-packageobfuscationdictionary ./mytest.txt</option>
                        <option>-obfuscationdictionary ./mytest.txt</option>

                        <!-- 不路过非公用类文件及成员-->
<!--                        <option>-dontskipnonpubliclibraryclasses</option>-->
<!--                        <option>-dontskipnonpubliclibraryclassmembers</option>-->

                        <!--不用大小写混合类名机制-->
<!--                        <option>-dontusemixedcaseclassnames</option>-->

                        <!-- 优化时允许访问并修改有修饰符的类和类的成员 -->
<!--                        <option>-allowaccessmodification</option>-->

                        <!-- 确定统一的混淆类的成员名称来增加混淆-->
<!--                        <option>-useuniqueclassmembernames</option>-->

                        <option>-ignorewarnings</option>

                        <option>-keepdirectories</option>

                        <!-- 不混淆所有包名-->
<!--                        <option>-keeppackagenames</option>-->

                        <!-- 需要保持的属性：异常，注解等-->
                        <option>-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LocalVariable*Table,*Annotation*,Synthetic,EnclosingMethod</option>
                        <!-- 不混淆所有的set/get方法-->
<!--                        <option>-keepclassmembers public class * {void set*(***);*** get*();}</option>-->

                        <!-- 不混淆包下的所有类名，且类中的方法也不混淆-->
                        <!--                        <option>-keep class com.xxx.xxx.bboss.SystemConfig { <methods>; }</option>-->
                        <!--<option>-keep class com.xxx.xxx.framework.** { *; }</option>-->
                        <!--<option>-keep class com.xxx.xxx.xxx.controller.** { <methods>; }</option>-->
                        <!--<option>-keep class com.xxx.xxx.xxx.dao.** { <methods>; }</option>-->
                        <!--<option>-keep class com.xxx.xxx.xxx.exception { <methods>; }</option>-->
                        <option>-keep class org.codehaus.classworlds.** {*;}</option>
                        <option>-keep class com.denote.client.LightingBoot {*;}</option>
<!--                        <option>-keep class com.denote.client.Application {*;}</option>-->
                        <option>-keepclassmembers class * { &lt;fields&gt;;&lt;methods&gt;; }</option>
                    </options>

                    <!--class 混淆后输出的jar包-->
                    <outjar>classes-autotest.jar</outjar>

                    <!-- 添加依赖，这里你可以按你的需要修改，这里测试只需要一个JRE的Runtime包就行了 -->
                    <!--<libs>-->
                    <!--    <lib>${java.home}/lib/rt.jar</lib>-->
                    <!--</libs>-->

                    <!-- 对什么东西进行加载，这里仅有classes成功，毕竟你也不可能对配置文件及JSP混淆吧-->
                    <!--<injar>classes</injar>-->

                    <!-- 输出目录-->
                    <!--<outputDirectory>${project.build.directory}</outputDirectory>-->
                </configuration>
            </plugin>

            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <executions>
                    <execution>
                        <phase>install</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${project.build.directory}/lib</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

<!--    <repositories>-->
<!--        <repository>-->
<!--            <id>aliyun-repos</id>-->
<!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </repository>-->
<!--    </repositories>-->

<!--    <pluginRepositories>-->
<!--        <pluginRepository>-->
<!--            <id>aliyun-plugin</id>-->
<!--            <url>http://maven.aliyun.com/nexus/content/groups/public/</url>-->
<!--            <snapshots>-->
<!--                <enabled>false</enabled>-->
<!--            </snapshots>-->
<!--        </pluginRepository>-->
<!--    </pluginRepositories>-->

</project>